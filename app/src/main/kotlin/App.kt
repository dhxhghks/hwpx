/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */

/* import jakarta.xml.bind.JAXBContext
import jakarta.xml.bind.Marshaller
import jakarta.xml.bind.Unmarshaller */
import javax.xml.bind.JAXBContext
import javax.xml.bind.JAXBException
import javax.xml.bind.Unmarshaller
import javax.xml.bind.Marshaller

import java.io.StringReader
import java.io.StringWriter

import org.idpf._2007.opf.ObjectFactory
import org.idpf._2007.opf.Package
import org.idpf._2007.opf.Metadata


fun marshalPackage(p: Package): String {
    val context = JAXBContext.newInstance(Package::class.java)
    val marshaller = context.createMarshaller()
    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true)

    val writer = StringWriter()
    marshaller.marshal(p, writer)

    return writer.toString()
}

fun unmarshalPackage(xml: String): Package {
    val context = JAXBContext.newInstance(Package::class.java)
    val unmarshaller = context.createUnmarshaller()
    val reader = StringReader(xml)

    return unmarshaller.unmarshal(reader) as Package
}

fun main() {
    var of: ObjectFactory = ObjectFactory()
    var p: Package = of.createPackage()
    p.setMetadata(of.createMetadata())
    p.getMetadata().setTitle(of.createTitle())

    val context = JAXBContext.newInstance(Package::class.java)
    val marshaller = context.createMarshaller()
    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true)

    val writer = StringWriter()
    marshaller.marshal(p, writer)

    print(writer.toString())
}
